
---
- name: Rotate DB passwords and update JBoss configs
  hosts: all
  gather_facts: no

  vars:
    password_dir: /tmp/db_passwords
    encoded_dir: /tmp/encoded_passwords
    password_length: 12

  pre_tasks:
    - name: Ensure output directories exist locally
      delegate_to: localhost
      run_once: true
      file:
        path: "{{ item }}"
        state: directory
        mode: "0700"
      loop:
        - "{{ password_dir }}"
        - "{{ encoded_dir }}"

  tasks:
    ###################################################################
    # 1️⃣ Tasks to run once per environment (on localhost)
    ###################################################################
    - name: Generate new passwords for DB users
      delegate_to: localhost
      run_once: true
      set_fact:
        db_passwords: "{{ dict(db_users | zip(random_passwords)) }}"
      vars:
        random_passwords: >-
          {{ db_users | map('community.general.random_string',
                             length=password_length,
                             special_chars='_',
                             upper=True,
                             lower=True,
                             digits=True) | list }}

    - name: Save passwords locally for this environment
      delegate_to: localhost
      run_once: true
      copy:
        dest: "{{ password_dir }}/{{ group_names[1] | default(inventory_hostname) }}_passwords.txt"
        content: |
          {% for user, pwd in db_passwords.items() %}
          {{ user }}={{ pwd }}
          {% endfor %}

    ###################################################################
    # 2️⃣ Tasks to run only on the first JBoss host of each environment
    ###################################################################
    - name: Change DB user passwords (sqlplus)
      shell: |
        export ORACLE_SID={{ db_sid }}
        export ORAENV_ASK=NO
        . /usr/local/bin/oraenv > /dev/null 2>&1
        for user in {{ db_users | join(' ') }}; do
          passwd="{{ db_passwords[user] }}"
          echo "alter user $user identified by \"$passwd\";" | sqlplus -s {{ db_admin_user }}/{{ db_admin_pass }}@{{ db_sid }} as sysdba
        done
      args:
        executable: /bin/bash
      when: inventory_hostname == (groups[group_names[1]][0])  # only first host per env

    ###################################################################
    # 3️⃣ Tasks to run on all JBoss hosts in the environment
    ###################################################################
    - name: Backup standalone XML
      shell: |
        cd {{ config_path }}
        cp -p standalone-full-ha.xml standalone-full-ha.xml{{ backup_suffix }}
        cp -p standalone-full-ha.xml standalone-full-ha.xml{{ backup_suffix }}_update
      args:
        executable: /bin/bash

    - name: Encode passwords for each JBoss host
      shell: |
        export JBOSS_HOME={{ jboss_home }}
        export CLASSPATH=$JBOSS_HOME/modules/system/layers/base/org/picketbox/main/*:$JBOSS_HOME/modules/system/layers/base/org/jboss/logging/main/*
        > /tmp/encoded_passwords_{{ inventory_hostname }}.txt
        {% for user, pwd in db_passwords.items() %}
        echo "{{ user }}:$(java org.picketbox.datasource.security.SecureIdentityLoginModule '{{ pwd }}' | tail -1)" >> /tmp/encoded_passwords_{{ inventory_hostname }}.txt
        {% endfor %}
      args:
        executable: /bin/bash

    - name: Update standalone XML with encoded passwords
      shell: |
        cd {{ config_path }}
        while IFS=":" read -r user enc; do
          sed -i "/<module-option name=\"username\" value=\"$user\"\/>/{
            n; s|<module-option name=\"password\" value=\"[^\"]*\"\/>|<module-option name=\"password\" value=\"$enc\"\/>|
          }" standalone-full-ha.xml
        done < /tmp/encoded_passwords_{{ inventory_hostname }}.txt
      args:
        executable: /bin/bash

    - name: Restart JBoss
      shell: |
        stopjboss
        startjboss
      args:
        executable: /bin/bash

  post_tasks:
    - name: Report summary
      delegate_to: localhost
      run_once: true
      debug:
        msg: "Passwords updated for {{ group_names[1] | default(inventory_hostname) }} environment"
