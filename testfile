import requests
from bs4 import BeautifulSoup
from datadog import DogStatsd

# --- Config ---
SHAREPOINT_URL = 'https://yourcompany.sharepoint.com/sites/yoursite/SitePages/YourPage.aspx'
USERNAME = 'your.email@company.com'
PASSWORD = 'your-password'

# DogStatsD instance (local agent)
statsd = DogStatsd(host="localhost", port=8125)

# --- Fetch SharePoint Page ---
response = requests.get(SHAREPOINT_URL, auth=(USERNAME, PASSWORD))
if response.status_code != 200:
    raise Exception(f"Failed to fetch SharePoint page: {response.status_code}")

# --- Parse HTML ---
soup = BeautifulSoup(response.text, 'html.parser')

# --- Locate the "EOD/BOD deliverables" Table ---
target_table = None
for table in soup.find_all('table'):
    heading = table.find_previous(['h2', 'h3', 'strong'])
    if heading and "EOD/BOD deliverables" in heading.get_text(strip=True):
        target_table = table
        break

if not target_table:
    raise Exception("EOD/BOD deliverables table not found.")

# --- Process Table Rows ---
rows = target_table.find_all('tr')
header = [th.get_text(strip=True).lower().replace(" ", "_") for th in rows[0].find_all('th')]
for row in rows[1:]:
    cells = row.find_all('td')
    if len(cells) != 5:
        continue

    row_data = dict(zip(header, [td.get_text(strip=True) for td in cells]))

    # Extract relevant fields
    event_name = row_data.get("event", "unknown_event").replace(" ", "_").lower()
    execution_time_str = row_data.get("execution_time_(min)", "0")
    sla_status = row_data.get("sla_status", "unknown").lower()

    # Convert execution time
    try:
        exec_time = float(execution_time_str)
    except ValueError:
        exec_time = 0.0

    # Convert SLA to numeric tag
    sla_tag = f"sla:{sla_status}"

    # --- Send metrics to Datadog ---
    metric_base = f"sharepoint.eod_bod.{event_name}"
    statsd.gauge(f"{metric_base}.execution_time_min", exec_time, tags=[sla_tag])
    # Optional: Push binary SLA status (1 for met, 0 for missed)
    sla_status_value = 1 if "met" in sla_status else 0
    statsd.gauge(f"{metric_base}.sla_met", sla_status_value, tags=[sla_tag])

    print(f"Sent: {metric_base} | time={exec_time} | sla_status={sla_status}")
