import React, { useState } from 'react';

// Mock API service that demonstrates proper URL parameter encoding
const ApiService = {
  async request(endpoint, options = {}, params = {}) {
    // Build URL with parameters
    const url = this.buildUrl(endpoint, params);
    console.log('Final URL:', url);
    
    // In a real implementation, this would be an actual API call
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve({
          status: 200,
          data: { message: `Successfully called ${url}` },
          url: url
        });
      }, 1000);
    });
  },

  buildUrl(endpoint, params = {}) {
    // Base URL - would typically come from environment config
    const baseUrl = 'http://localhost:8080/api';
    
    // Create URL object
    const url = new URL(`${baseUrl}${endpoint}`);
    
    // Add parameters to URL
    Object.keys(params).forEach(key => {
      if (params[key] !== undefined && params[key] !== null) {
        url.searchParams.append(key, params[key]);
      }
    });
    
    return url.toString();
  },

  async get(endpoint, options = {}) {
    return this.request(endpoint, { method: 'GET', ...options }, options.params);
  }
};

// Performance Reports Component
const PerformanceReports = () => {
  const [month, setMonth] = useState('August 2025');
  const [response, setResponse] = useState(null);
  const [loading, setLoading] = useState(false);

  const fetchPerformanceReport = async () => {
    setLoading(true);
    setResponse(null);
    
    try {
      const result = await ApiService.get('/performance/runmonth', {
        params: { month }
      });
      
      setResponse(result);
    } catch (error) {
      setResponse({
        error: true,
        message: error.message || 'An error occurred'
      });
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>
      <h2>Performance Reports</h2>
      
      <div style={{ marginBottom: '20px', padding: '15px', backgroundColor: '#f5f5f5', borderRadius: '5px' }}>
        <h3>API Call Information</h3>
        <p>Endpoint: <code>/performance/runmonth</code></p>
        <p>Expected URL: <code>http://localhost:8080/api/performance/runmonth?month=August+2025</code></p>
      </div>
      
      <div style={{ marginBottom: '20px' }}>
        <label htmlFor="monthInput" style={{ display: 'block', marginBottom: '5px' }}>
          Month Parameter:
        </label>
        <input
          id="monthInput"
          type="text"
          value={month}
          onChange={(e) => setMonth(e.target.value)}
          style={{ padding: '8px', width: '200px', marginRight: '10px' }}
          placeholder="Enter month value"
        />
        <button 
          onClick={fetchPerformanceReport}
          disabled={loading}
          style={{
            padding: '8px 16px',
            backgroundColor: loading ? '#ccc' : '#4CAF50',
            color: 'white',
            border: 'none',
            borderRadius: '4px',
            cursor: loading ? 'not-allowed' : 'pointer'
          }}
        >
          {loading ? 'Calling API...' : 'Call API'}
        </button>
      </div>
      
      {response && (
        <div style={{
          marginTop: '20px',
          padding: '15px',
          backgroundColor: response.error ? '#ffebee' : '#e8f5e9',
          border: `1px solid ${response.error ? '#f44336' : '#4CAF50'}`,
          borderRadius: '5px'
        }}>
          <h3>{response.error ? 'Error Response' : 'API Response'}</h3>
          <pre style={{
            whiteSpace: 'pre-wrap',
            wordBreak: 'break-all',
            backgroundColor: '#fff',
            padding: '10px',
            borderRadius: '4px',
            overflowX: 'auto'
          }}>
            {JSON.stringify(response, null, 2)}
          </pre>
        </div>
      )}
      
      <div style={{ marginTop: '30px', padding: '15px', backgroundColor: '#e3f2fd', borderRadius: '5px' }}>
        <h3>How It Works</h3>
        <p>The <code>buildUrl</code> method in <code>ApiService</code>:</p>
        <ol>
          <li>Creates a URL object with the base URL and endpoint</li>
          <li>Uses <code>URLSearchParams</code> to properly encode parameters</li>
          <li>Automatically handles spaces (converting them to '+') and other special characters</li>
        </ol>
        <p>This ensures the final URL is correctly formatted as:</p>
        <code>http://localhost:8080/api/performance/runmonth?month=August+2025</code>
      </div>
    </div>
  );
};

// Main App Component
const App = () => {
  return (
    <div>
      <PerformanceReports />
    </div>
  );
};

export default App;
