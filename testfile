// Update your main class preSpringTest method:
private static void preSpringTest() {
    System.out.println("üîç PRE-SPRING DATABASE TEST");
    
    try {
        // Try multiple connection URLs
        String[] testUrls = {
            "jdbc:mysql://localhost:3306/apdmrhel",
            "jdbc:mysql://localhost:3306/apdmrhel?useSSL=false&serverTimezone=UTC",
            "jdbc:mysql://localhost:3306/",  // Connect without default database
        };
        
        String username = "your_username";  // Replace with actual username
        String password = "your_password";  // Replace with actual password
        
        Class.forName("com.mysql.cj.jdbc.Driver");
        
        for (String url : testUrls) {
            System.out.println("Testing URL: " + url);
            try (Connection conn = DriverManager.getConnection(url, username, password)) {
                String catalog = conn.getCatalog();
                String schema = conn.getSchema();
                DatabaseMetaData metaData = conn.getMetaData();
                
                System.out.println("‚úÖ Connected successfully!");
                System.out.println("   Catalog: " + catalog);
                System.out.println("   Schema: " + schema);
                System.out.println("   Database: " + metaData.getDatabaseProductName() + " " + metaData.getDatabaseProductVersion());
                
                // List all databases
                System.out.println("üìã Available databases:");
                try (ResultSet rs = conn.getMetaData().getCatalogs()) {
                    while (rs.next()) {
                        String dbName = rs.getString("TABLE_CAT");
                        System.out.println("   - " + dbName);
                    }
                }
                
                // If we have a catalog, test our table
                if (catalog != null) {
                    testTableInDatabase(conn, catalog);
                } else {
                    // Try to find our database
                    findAndTestOurDatabase(conn);
                }
                
                break; // Stop if one URL works
                
            } catch (SQLException e) {
                System.out.println("‚ùå Failed with URL: " + url + " - " + e.getMessage());
            }
        }
        
    } catch (Exception e) {
        System.out.println("‚ùå PRE-SPRING TEST FAILED: " + e.getMessage());
        e.printStackTrace();
    }
}

private static void testTableInDatabase(Connection conn, String database) throws SQLException {
    System.out.println("üîç Testing table in database: " + database);
    
    // Test our specific table
    String[] tableVariations = {"dfs_apdm_rep", "DFS_APDM_REP"};
    
    for (String tableName : tableVariations) {
        try {
            String sql = "SELECT COUNT(*) FROM " + database + "." + tableName;
            try (Statement stmt = conn.createStatement();
                 ResultSet rs = stmt.executeQuery(sql)) {
                if (rs.next()) {
                    int count = rs.getInt(1);
                    System.out.println("‚úÖ TABLE FOUND: " + database + "." + tableName + " has " + count + " rows");
                    return;
                }
            }
        } catch (SQLException e) {
            System.out.println("‚ùå Table not found: " + database + "." + tableName + " - " + e.getMessage());
        }
    }
    
    // If table not found, list all tables in the database
    System.out.println("üìã All tables in database '" + database + "':");
    try (ResultSet tables = conn.getMetaData().getTables(database, null, "%", new String[]{"TABLE"})) {
        int tableCount = 0;
        while (tables.next()) {
            String schema = tables.getString("TABLE_SCHEM");
            String tableName = tables.getString("TABLE_NAME");
            System.out.println("   - " + (schema != null ? schema + "." : "") + tableName);
            tableCount++;
        }
        System.out.println("Total tables: " + tableCount);
    }
}

private static void findAndTestOurDatabase(Connection conn) throws SQLException {
    System.out.println("üîç Searching for our database...");
    
    // Look for databases that might be ours
    try (ResultSet catalogs = conn.getMetaData().getCatalogs()) {
        while (catalogs.next()) {
            String dbName = catalogs.getString("TABLE_CAT");
            if (dbName.toLowerCase().contains("apdm") || dbName.toLowerCase().contains("rhel")) {
                System.out.println("üéØ Found potential database: " + dbName);
                testTableInDatabase(conn, dbName);
            }
        }
    }
}
