@Query(value = "SELECT " +
            "baseRun.RUNNO as baselineRunNo, " +
            "to_char(baseRun.sttime, 'DD-MON-YY') as baselineDate, " +
            "baseRun.RUN_DESC as baselineDescription, " +
            "round(baseRun.AVGRESPTIME, 0) as baselineAvgRespTime, " +
            "currRun.RUNNO as currentRunNo, " +
            "trim(currRun.USECASE) as useCase, " +
            "round(currRun.AVGRESPTIME, 0) as currentAvgRespTime, " +
            "trim(currRun.NOOFEXEC) as executionsCount, " +
            "trim(currRun.NOOFDISTINP) as distinctInputsCount, " +
            "trim(currRun.NOOFSUCC) as successCount, " +
            "trim(currRun.NOOFFAIL) as failCount, " +
            "trim(currRun.NOOFTIMEOUTS) as timeoutCount, " +
            "trim(currRun.PCNTFAIL) as failPercentage, " +
            "trim(currRun.MINRESP) as minResponse, " +
            "trim(currRun.MAXRESP) as maxResponse, " +
            "ROUND(((nvl(baseRun.AVGRESPTIME, 0) - nvl(currRun.AVGRESPTIME, 0)) / " +
            "      (nvl(baseRun.AVGRESPTIME, 1))) * 100, 2) as deviationPercentage " +
            "FROM " +
            "(SELECT a.*, b.sttime, b.run_desc " +
            " FROM COREAUTO.ins_log_summ a, COREAUTO.ins_log_runbook b " +
            " WHERE a.runno = b.runno " +
            " AND a.runno = (SELECT runno " +
            "                FROM (SELECT runno, " +
            "                      rank() over (order by to_number(runno) desc) as row_rank " +
            "                      FROM coreauto.ins_log_runbook " +
            "                      WHERE build_baseline_flg = 'Y') " +
            "                WHERE row_rank = :baselineRank)) baseRun, " +
            "(SELECT * FROM COREAUTO.ins_log_summ WHERE runno = :currentRunNo) currRun " +
            "WHERE baseRun.USECASE(+) = currRun.USECASE " +
            "ORDER BY lower(currRun.USECASE)", 
            nativeQuery = true)
